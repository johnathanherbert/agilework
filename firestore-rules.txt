rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    // - Qualquer usu치rio autenticado pode LER todos os documentos (necess치rio para online users)
    // - Mas s칩 pode ESCREVER no pr칩prio documento
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // NTs collection - authenticated users can read/write all NTs
    match /nts/{ntId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // NT Items collection - authenticated users can read/write all items
    match /nt_items/{itemId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Notifications collection - users can only access their own notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
                     resource.data.user_id == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                      resource.data.user_id == request.auth.uid;
      allow delete: if isAuthenticated() && 
                      resource.data.user_id == request.auth.uid;
    }
    
    // Chat messages - authenticated users can read all and create
    // Only owner can delete their own messages
    match /chat_messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated() && 
                      resource.data.userId == request.auth.uid;
    }
    
    // Private messages - users can only see messages sent to or from them
    match /private_messages/{messageId} {
      allow read: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid ||
        resource.data.receiverId == request.auth.uid
      );
      allow create: if isAuthenticated() && 
                      request.resource.data.senderId == request.auth.uid;
      allow update: if isAuthenticated() && 
                      resource.data.receiverId == request.auth.uid;
      allow delete: if isAuthenticated() && 
                      resource.data.senderId == request.auth.uid;
    }
  }
}